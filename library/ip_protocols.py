#
#    Copyright (c) 2018 World Wide Technology, Inc.
#    All rights reserved.
#
#    author: joel.king@wwt.com
#
#    changes:
#
#    Jan 12
#        Bruce Clounie - changed protocol names to match ACI filter protocol values of
#            eigrp,egp,icmp,icmpv6,igmp,igp,l2tp,ospfigp,pim,tcp,udp, or unspecified for all others
#
class ProtocolMap(object):
    """
    Returns the keyword for the Assigned Internet Protocol Numbers given the protocol number as input.

    Refer to: https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers

    """
    PROTOCOLS = {
                 0: 'unspecified',
                 1: 'icmp',
                 2: 'igmp',
                 3: 'unspecified',
                 4: 'unspecified',
                 5: 'unspecified',
                 6: 'tcp',
                 7: 'unspecified',
                 8: 'egp',
                 9: 'igp',
                 10: 'unspecified',
                 11: 'unspecified',
                 12: 'unspecified',
                 13: 'unspecified',
                 14: 'unspecified',
                 15: 'unspecified',
                 16: 'unspecified',
                 17: 'udp',
                 18: 'unspecified',
                 19: 'unspecified',
                 20: 'unspecified',
                 21: 'unspecified',
                 22: 'unspecified',
                 23: 'unspecified',
                 24: 'unspecified',
                 25: 'unspecified',
                 26: 'unspecified',
                 27: 'unspecified',
                 28: 'unspecified',
                 29: 'unspecified',
                 30: 'unspecified',
                 31: 'unspecified',
                 32: 'unspecified',
                 33: 'unspecified',
                 34: 'unspecified',
                 35: 'unspecified',
                 36: 'unspecified',
                 37: 'unspecified',
                 38: 'unspecified',
                 39: 'unspecified',
                 40: 'unspecified',
                 41: 'unspecified',
                 42: 'unspecified',
                 43: 'unspecified',
                 44: 'unspecified',
                 45: 'unspecified',
                 46: 'unspecified',
                 47: 'unspecified',
                 48: 'unspecified',
                 49: 'unspecified',
                 50: 'unspecified',
                 51: 'unspecified',
                 52: 'unspecified',
                 53: 'unspecified',
                 54: 'unspecified',
                 55: 'unspecified',
                 56: 'unspecified',
                 57: 'unspecified',
                 58: 'icmpv6',
                 59: 'unspecified',
                 60: 'unspecified',
                 61: 'unspecified',
                 62: 'unspecified',
                 63: 'unspecified',
                 64: 'unspecified',
                 65: 'unspecified',
                 66: 'unspecified',
                 67: 'unspecified',
                 68: 'unspecified',
                 69: 'unspecified',
                 70: 'unspecified',
                 71: 'unspecified',
                 72: 'unspecified',
                 73: 'unspecified',
                 74: 'unspecified',
                 75: 'unspecified',
                 76: 'unspecified',
                 77: 'unspecified',
                 78: 'unspecified',
                 79: 'unspecified',
                 80: 'unspecified',
                 81: 'unspecified',
                 82: 'unspecified',
                 83: 'unspecified',
                 84: 'unspecified',
                 85: 'unspecified',
                 86: 'unspecified',
                 87: 'unspecified',
                 88: 'eigrp',
                 89: 'ospfigp',
                 90: 'unspecified',
                 91: 'unspecified',
                 92: 'unspecified',
                 93: 'unspecified',
                 94: 'unspecified',
                 95: 'unspecified',
                 96: 'unspecified',
                 97: 'unspecified',
                 98: 'unspecified',
                 99: 'unspecified',
                 100: 'unspecified',
                 101: 'unspecified',
                 102: 'unspecified',
                 103: 'pim',
                 104: 'unspecified',
                 105: 'unspecified',
                 106: 'unspecified',
                 107: 'unspecified',
                 108: 'unspecified',
                 109: 'unspecified',
                 110: 'unspecified',
                 111: 'unspecified',
                 112: 'unspecified',
                 113: 'unspecified',
                 114: 'unspecified',
                 115: 'l2tp',
                 116: 'unspecified',
                 117: 'unspecified',
                 118: 'unspecified',
                 119: 'unspecified',
                 120: 'unspecified',
                 121: 'unspecified',
                 122: 'unspecified',
                 123: 'unspecified',
                 124: 'unspecified',
                 125: 'unspecified',
                 126: 'unspecified',
                 127: 'unspecified',
                 128: 'unspecified',
                 129: 'unspecified',
                 130: 'unspecified',
                 131: 'unspecified',
                 132: 'unspecified',
                 133: 'unspecified',
                 134: 'unspecified',
                 135: 'unspecified',
                 136: 'unspecified',
                 137: 'unspecified',
                 138: 'unspecified',
                 139: 'unspecified',
                 140: 'unspecified',
                 141: 'unspecified',
                 142: 'unspecified',
                 143: 'unspecified',
                 144: 'unspecified',
                 145: 'unspecified',
                 146: 'unspecified',
                 147: 'unspecified',
                 148: 'unspecified',
                 149: 'unspecified',
                 150: 'unspecified',
                 151: 'unspecified',
                 152: 'unspecified',
                 153: 'unspecified',
                 154: 'unspecified',
                 155: 'unspecified',
                 156: 'unspecified',
                 157: 'unspecified',
                 158: 'unspecified',
                 159: 'unspecified',
                 160: 'unspecified',
                 161: 'unspecified',
                 162: 'unspecified',
                 163: 'unspecified',
                 164: 'unspecified',
                 165: 'unspecified',
                 166: 'unspecified',
                 167: 'unspecified',
                 168: 'unspecified',
                 169: 'unspecified',
                 170: 'unspecified',
                 171: 'unspecified',
                 172: 'unspecified',
                 173: 'unspecified',
                 174: 'unspecified',
                 175: 'unspecified',
                 176: 'unspecified',
                 177: 'unspecified',
                 178: 'unspecified',
                 179: 'unspecified',
                 180: 'unspecified',
                 181: 'unspecified',
                 182: 'unspecified',
                 183: 'unspecified',
                 184: 'unspecified',
                 185: 'unspecified',
                 186: 'unspecified',
                 187: 'unspecified',
                 188: 'unspecified',
                 189: 'unspecified',
                 190: 'unspecified',
                 191: 'unspecified',
                 192: 'unspecified',
                 193: 'unspecified',
                 194: 'unspecified',
                 195: 'unspecified',
                 196: 'unspecified',
                 197: 'unspecified',
                 198: 'unspecified',
                 199: 'unspecified',
                 200: 'unspecified',
                 201: 'unspecified',
                 202: 'unspecified',
                 203: 'unspecified',
                 204: 'unspecified',
                 205: 'unspecified',
                 206: 'unspecified',
                 207: 'unspecified',
                 208: 'unspecified',
                 209: 'unspecified',
                 210: 'unspecified',
                 211: 'unspecified',
                 212: 'unspecified',
                 213: 'unspecified',
                 214: 'unspecified',
                 215: 'unspecified',
                 216: 'unspecified',
                 217: 'unspecified',
                 218: 'unspecified',
                 219: 'unspecified',
                 220: 'unspecified',
                 221: 'unspecified',
                 222: 'unspecified',
                 223: 'unspecified',
                 224: 'unspecified',
                 225: 'unspecified',
                 226: 'unspecified',
                 227: 'unspecified',
                 228: 'unspecified',
                 229: 'unspecified',
                 230: 'unspecified',
                 231: 'unspecified',
                 232: 'unspecified',
                 233: 'unspecified',
                 234: 'unspecified',
                 235: 'unspecified',
                 236: 'unspecified',
                 237: 'unspecified',
                 238: 'unspecified',
                 239: 'unspecified',
                 240: 'unspecified',
                 241: 'unspecified',
                 242: 'unspecified',
                 243: 'unspecified',
                 244: 'unspecified',
                 245: 'unspecified',
                 246: 'unspecified',
                 247: 'unspecified',
                 248: 'unspecified',
                 249: 'unspecified',
                 250: 'unspecified',
                 251: 'unspecified',
                 252: 'unspecified',
                 253: 'unspecified',
                 254: 'unspecified'}

    def __init__(self):
        """ Not implemented
        """
        pass

    def get_keyword(self, protocol_number):
        """ Return the keyword for the protocol number. Return a string type of the 
            input protocol_number if not valid or not found.
        """
        if not isinstance(protocol_number, int):
            try:
                protocol_number = int(protocol_number)
            except ValueError:
                return str(protocol_number)

        if protocol_number >= len(ProtocolMap.PROTOCOLS) or protocol_number < 0:
            return str(protocol_number)
        
        return ProtocolMap.PROTOCOLS.get(protocol_number)
